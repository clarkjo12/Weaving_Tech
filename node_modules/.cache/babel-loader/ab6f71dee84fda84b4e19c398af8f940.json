{"ast":null,"code":"import _objectSpread from \"/Users/Charles/Desktop/Weaving_Tech/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Charles/Desktop/Weaving_Tech/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Charles/Desktop/Weaving_Tech/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Charles/Desktop/Weaving_Tech/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Charles/Desktop/Weaving_Tech/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Charles/Desktop/Weaving_Tech/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Charles/Desktop/Weaving_Tech/src/pages/Discover.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Card from \"../components/Card\";\nimport Alert from \"../components/Alert\";\n\nvar Discover =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Discover, _Component);\n\n  function Discover() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Discover);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Discover)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      image: \"\",\n      match: false,\n      matchCount: 0\n    };\n\n    _this.handleBtnClick = function (event) {\n      // Get the data-value of the clicked button\n      var btnType = event.target.attributes.getNamedItem(\"data-value\").value; // Clone this.state to the newState object\n      // We'll modify this object and use it to set our component's state\n\n      var newState = _objectSpread({}, _this.state);\n\n      if (btnType === \"pick\") {\n        // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\n        newState.match = 1 === Math.floor(Math.random() * 5) + 1; // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\n\n        newState.matchCount = newState.match ? newState.matchCount + 1 : newState.matchCount;\n      } else {\n        // If we thumbs down'ed the dog, we haven't matched with it\n        newState.match = false;\n      } // Replace our component's state with newState, load the next dog image\n\n\n      _this.setState(newState);\n\n      _this.loadNextDog();\n    };\n\n    _this.loadNextDog = function () {\n      API.getRandomDog().then(function (res) {\n        return _this.setState({\n          image: res.data.message\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Discover, [{\n    key: \"componentDidMount\",\n    // When the component mounts, load the next dog to be displayed\n    value: function componentDidMount() {\n      this.loadNextDog();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Profile\"), React.createElement(\"h3\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Edit Settings:\"), React.createElement(Card, {\n        image: \"https://images.dog.ceo/breeds/brabancon/n02112706_1764.jpg\",\n        handleBtnClick: this.handleBtnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Made friends with \", this.state.matchCount, \" pups so far!\"), React.createElement(Alert, {\n        style: {\n          opacity: this.state.match ? 1 : 0\n        },\n        type: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Yay! That Pup Liked You Too!!!\"));\n    }\n  }]);\n\n  return Discover;\n}(Component);\n\nexport default Discover;","map":{"version":3,"sources":["/Users/Charles/Desktop/Weaving_Tech/src/pages/Discover.js"],"names":["React","Component","API","Card","Alert","Discover","state","image","match","matchCount","handleBtnClick","event","btnType","target","attributes","getNamedItem","value","newState","Math","floor","random","setState","loadNextDog","getRandomDog","then","res","data","message","catch","err","console","log","opacity"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE,KAFD;AAGNC,MAAAA,UAAU,EAAE;AAHN,K;;UAWRC,c,GAAiB,UAAAC,KAAK,EAAI;AACxB;AACA,UAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwBC,YAAxB,CAAqC,YAArC,EAAmDC,KAAnE,CAFwB,CAGxB;AACA;;AACA,UAAMC,QAAQ,qBAAQ,MAAKX,KAAb,CAAd;;AAEA,UAAIM,OAAO,KAAK,MAAhB,EAAwB;AACtB;AACAK,QAAAA,QAAQ,CAACT,KAAT,GAAiB,MAAMU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAAvD,CAFsB,CAItB;;AACAH,QAAAA,QAAQ,CAACR,UAAT,GAAsBQ,QAAQ,CAACT,KAAT,GAClBS,QAAQ,CAACR,UAAT,GAAsB,CADJ,GAElBQ,QAAQ,CAACR,UAFb;AAGD,OARD,MAQO;AACL;AACAQ,QAAAA,QAAQ,CAACT,KAAT,GAAiB,KAAjB;AACD,OAlBuB,CAmBxB;;;AACA,YAAKa,QAAL,CAAcJ,QAAd;;AACA,YAAKK,WAAL;AACD,K;;UAEDA,W,GAAc,YAAM;AAClBpB,MAAAA,GAAG,CAACqB,YAAJ,GACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eACP,MAAKJ,QAAL,CAAc;AACZd,UAAAA,KAAK,EAAEkB,GAAG,CAACC,IAAJ,CAASC;AADJ,SAAd,CADO;AAAA,OADX,EAMGC,KANH,CAMS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OANZ;AAOD,K;;;;;;;AArCD;wCACoB;AAClB,WAAKP,WAAL;AACD;;;6BAoCQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,EAGE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAC,4DADR;AAEE,QAAA,cAAc,EAAE,KAAKZ,cAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAOE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACqB,KAAKJ,KAAL,CAAWG,UADhC,kBAPF,EAUE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAEuB,UAAAA,OAAO,EAAE,KAAK1B,KAAL,CAAWE,KAAX,GAAmB,CAAnB,GAAuB;AAAlC,SAAd;AAAqD,QAAA,IAAI,EAAC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAVF,CADF;AAgBD;;;;EA/DoBP,S;;AAkEvB,eAAeI,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Card from \"../components/Card\";\nimport Alert from \"../components/Alert\";\n\nclass Discover extends Component {\n  state = {\n    image: \"\",\n    match: false,\n    matchCount: 0\n  };\n\n  // When the component mounts, load the next dog to be displayed\n  componentDidMount() {\n    this.loadNextDog();\n  }\n\n  handleBtnClick = event => {\n    // Get the data-value of the clicked button\n    const btnType = event.target.attributes.getNamedItem(\"data-value\").value;\n    // Clone this.state to the newState object\n    // We'll modify this object and use it to set our component's state\n    const newState = { ...this.state };\n\n    if (btnType === \"pick\") {\n      // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\n      newState.match = 1 === Math.floor(Math.random() * 5) + 1;\n\n      // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\n      newState.matchCount = newState.match\n        ? newState.matchCount + 1\n        : newState.matchCount;\n    } else {\n      // If we thumbs down'ed the dog, we haven't matched with it\n      newState.match = false;\n    }\n    // Replace our component's state with newState, load the next dog image\n    this.setState(newState);\n    this.loadNextDog();\n  };\n\n  loadNextDog = () => {\n    API.getRandomDog()\n      .then(res =>\n        this.setState({\n          image: res.data.message\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"text-center\">Profile</h1>\n        <h3 className=\"text-center\">Edit Settings:</h3>\n        <Card\n          image=\"https://images.dog.ceo/breeds/brabancon/n02112706_1764.jpg\"\n          handleBtnClick={this.handleBtnClick}\n        />\n        <h1 className=\"text-center\">\n          Made friends with {this.state.matchCount} pups so far!\n        </h1>\n        <Alert style={{ opacity: this.state.match ? 1 : 0 }} type=\"success\">\n          Yay! That Pup Liked You Too!!!\n        </Alert>\n      </div>\n    );\n  }\n}\n\nexport default Discover;\n"]},"metadata":{},"sourceType":"module"}